Trajet : dhhdddddddddddddddbbbbbbgagbbgbbggggggggghgbgggggggghggbggggggghgggbhhhhhhhhhddhdbbdddhhddddddddhdaahhhhhdddbbbbgbbbbbbgbggbhgdddddddbdddbhdbddddbbbdddddhhghhhgghhhhghggggghggggghhgghgghghghggggggggbbbdbbddddbdddbddbgdbbgdhhbd

-rejoue test.bd ArnoDash01.txt -niveau 3

-rejoue test.bd niveau.txt -niveau 6

-cal -evolue 10 ArnoDash01.txt -niveau 3

-cal -direvol 20 ArnoDash01.txt -niveau 4

-cal -direvol 3 niveau.txt -niveau 6



generationActuelle++;
			for (int i = 0; i < (Constantes.NOMBRE_DE_TRY_GENERATION * Constantes.POURCENTAGE_DE_SURVIVANTS)
					/ 100; i++) {
				liste2.add(liste.get(i));
			}
			sommeScoreSurvivants=liste.get(0).getScore();
			if (sommeScoreSurvivants == ancienneSommeScoreSurvivants) {
				liste2.clear();
					Score s = liste.get(0);
					String finChemin = "";
					int mdr = s.getParcours() - tailleChangement;
					if (mdr < 0) {
						mdr = 0;
					}
					for (int j = mdr; j < tailleCheminMaximale; j++) {
						finChemin += Ia.directionRandom();
					}
					s.setChemin(s.getChemin().substring(0, s.getParcours() - tailleChangement) + finChemin);
					s = Partie.jouerFichierScore(Partie.cheminFichier, Partie.niveau, s.getChemin());
					liste2.add(s);
				tailleChangement*=tailleChangement;
			} else {
				tailleChangement = 0;
			}
			ancienneSommeScoreSurvivants = sommeScoreSurvivants;
>>>>>>> branchDany1805
